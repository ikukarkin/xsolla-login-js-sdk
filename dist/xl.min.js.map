{"version":3,"sources":["node_modules/browser-pack/_prelude.js","../package.json","src/supports.js","src/xlapi.js","src/main.js"],"names":["f","exports","module","define","amd","window","global","self","this","XL","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","version","2","indexOf","searchString","position","CustomEvent","onreadystatechange","readyState","success","JSON","parse","responseText","params","method","setRequestHeader","send","postBody","getArguments","XLApi","prototype","getSocialsURLs","error","str","key","encodeURIComponent","makeApiCall","endpoint","username","login","obj","_extends","Object","assign","target","arguments","source","hasOwnProperty","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_xlapi","_xlapi2","__esModule","default","ROUTES","LOGIN","REGISTRATION","RECOVER_PASSWORD","ALL_SOCIALS","DEFAULT_CONFIG","errorHandler","loginPassValidator","b","onlyWidgets","defaultLoginUrl","popupBackgroundColor","iframeZIndex","theme","preloader","widgetBaseUrl","route","IFRAME_ID","widgetIframe","document","createElement","instance","TypeError","_classCallCheck","socialUrls","eventTypes","LOAD","HIDE_POPUP","config","eventMethod","addEventListener","_this","dispatcher","dispatchEvent","event","keys","map","eventKey","on","options","onHideEvent","projectId","redirectUrl","redirect_url","loginUrl","login_url","callbackUrl","value","prop","_this2","authType","startsWith","undefined","console","api","loginPassAuth","pass","rememberMe","res","status","finish","finishAuth","err","smsAuthStep","smsAuth","phoneNumber","message","fields","src","getRedirectURL","getCallbackUrl","getTheme","externalWindow","widgetVersion","elementId","onload","_element","removeChild","_preloader","_this3","getIframeSrc","id","innerHTML","getElementById","style","width","height","appendChild","parentNode","zIndex","left","top","backgroundColor","_hide","handler","removeEventListener","onCloseEvent","_this4","_show","frameBorder","body","../package.json","./supports","./xlapi"],"mappings":"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","file":"xl.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports={\n  \"name\": \"xsolla-login-js-sdk\",\n  \"version\": \"2.0.0\",\n  \"description\": \"\",\n  \"main\": \"src/main.js\",\n  \"scripts\": {\n    \"build\": \"gulp build\",\n    \"host\": \"static-server . -p 8084\",\n    \"test\": \"karma start\",\n    \"test:watch\": \"karma start --no-single-run --auto-watch\"\n  },\n  \"author\": \"\",\n  \"license\": \"MIT\",\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"babel-plugin-transform-object-assign\": \"^6.22.0\",\n    \"babel-preset-es2015\": \"^6.18.0\",\n    \"babelify\": \"^7.3.0\",\n    \"bower\": \"^1.8.4\",\n    \"brfs\": \"^2.0.1\",\n    \"browser-sync\": \"^2.26.3\",\n    \"browserify\": \"^16.2.3\",\n    \"browserify-istanbul\": \"^2.0.0\",\n    \"browserify-shim\": \"^3.8.12\",\n    \"common-shakeify\": \"^0.6.0\",\n    \"gulp\": \"^3.9.1\",\n    \"gulp-if\": \"^2.0.2\",\n    \"gulp-rename\": \"1.2.0\",\n    \"gulp-sourcemaps\": \"1.5.2\",\n    \"gulp-strip-comments\": \"^2.5.2\",\n    \"gulp-uglify\": \"^3.0.1\",\n    \"gulp-util\": \"3.0.6\",\n    \"jasmine\": \"^2.4.1\",\n    \"karma\": \"^3.0.0\",\n    \"karma-browserify\": \"^5.3.0\",\n    \"karma-coverage\": \"^1.1.2\",\n    \"karma-jasmine\": \"^1.0.2\",\n    \"static-server\": \"2.2.1\",\n    \"vinyl-buffer\": \"1.0.0\",\n    \"vinyl-source-stream\": \"1.1.0\",\n    \"watchify\": \"^3.11.0\"\n  },\n  \"browserify-shim\": {\n    \"external\": \"global:External\"\n  }\n}\n","/**\n * Created by a.korotaev on 07.11.16.\n */\nif (!String.prototype.startsWith) {\n    String.prototype.startsWith = function(searchString, position) {\n        position = position || 0;\n        return this.indexOf(searchString, position) === position;\n    };\n}\n\nif ( typeof window.CustomEvent !== \"function\" ) {\n    function CustomEvent(event, params) {\n        params = params || {bubbles: false, cancelable: false, detail: undefined};\n        var evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n\n    window.CustomEvent = CustomEvent;\n}","/**\n * Created by a.korotaev on 24.06.16.\n */\n/**\n * Impelements Xsolla Login Api\n * @param projectId - project's unique identifier\n * @param baseUrl - api endpoint\n * @constructor\n */\n\nvar XLApi = function (projectId, baseUrl) {\n    var self = this;\n    this.baseUrl = baseUrl || '//login.xsolla.com/api/';\n\n    this.projectId = projectId;\n\n    this.makeApiCall = function (params, success, error) {\n        var r = new XMLHttpRequest();\n        r.withCredentials = true;\n        r.open(params.method, self.baseUrl + params.endpoint, true);\n        r.onreadystatechange = function () {\n            if (r.readyState == 4) {\n                if (r.status == 200) {\n                    success(JSON.parse(r.responseText));\n                } else {\n                    if (r.responseText) {\n                        error(JSON.parse(r.responseText));\n                    } else {\n                        error({error: {message: 'Networking error', code: r.status}});\n                    }\n                }\n            }\n        };\n        if (params.method == 'POST') {\n            r.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n            r.send(params.postBody);\n        } else if (params.method == 'GET') {\n            r.send(params.getArguments);\n        }\n    };\n};\n/**\n * Get all avialable social methods auth url\n * @param success - success callback\n * @param error - error callback\n * @param getArguments - additional params to send with request\n */\nXLApi.prototype.getSocialsURLs = function (success, error, getArguments) {\n    var str = \"\";\n    for (var key in getArguments) {\n        if (str != \"\") {\n            str += \"&\";\n        }\n        str += key + \"=\" + encodeURIComponent(getArguments[key]);\n    }\n\n    return this.makeApiCall({method: 'GET', endpoint: 'social/login_urls?' + str, getArguments: null}, success, error);\n};\n\nXLApi.prototype.loginPassAuth = function (login, pass, rememberMe, redirectUrl, success, error) {\n    var body = {\n        username: login,\n        password: pass,\n        remember_me: rememberMe\n    };\n    return this.makeApiCall({method: 'POST', endpoint: 'proxy/login?projectId='+this.projectId + '&redirect_url=' + encodeURIComponent(redirectUrl), postBody: JSON.stringify(body)}, success, error);\n};\n\nXLApi.prototype.smsAuth = function (phoneNumber, success, error) {\n    return this.makeApiCall({method: 'GET', endpoint: 'sms', getArguments: 'phoneNumber=' + phoneNumber}, success, error);\n};\n\nmodule.exports = XLApi;\n","/**\n * Created by a.korotaev on 24.06.16.\n */\nrequire('./supports');\nconst version = require('../package.json').version;\n\nimport XLApi from './xlapi';\n/**\n * Create an `Auth0` instance with `options`\n *\n * @class XL\n * @constructor\n */\n\nconst ROUTES = {\n    LOGIN: '',\n    REGISTRATION: 'registration',\n    RECOVER_PASSWORD: 'reset-password',\n    ALL_SOCIALS: 'other'\n};\n\nconst DEFAULT_CONFIG = {\n    errorHandler: function (a) {\n    },\n    loginPassValidator: function (a, b) {\n        return true;\n    },\n    isMarkupSocialsHandlersEnabled: false,\n    apiUrl: 'https://login.xsolla.com/api/',\n    maxXLClickDepth: 20,\n    onlyWidgets: false,\n    defaultLoginUrl: 'https://xl-widget.xsolla.com/auth.html',\n    popupBackgroundColor: 'rgb(187, 187, 187)',\n    iframeZIndex: 1000000,\n    theme: 'app.default.css',\n    preloader: '<div></div>',\n    widgetBaseUrl: 'https://xl-widget.xsolla.com/',\n    route: ROUTES.LOGIN,\n    inFullscreenMode: false\n};\n\nconst INVALID_LOGIN_ERROR_CODE = 1;\nconst INCORRECT_LOGIN_OR_PASSWORD_ERROR_CODE = 2;\n\nconst IFRAME_ID = 'XsollaLoginWidgetIframe';\nconst widgetIframe = document.createElement('iframe');\n\nclass XL {\n    constructor() {\n        this.socialUrls = {};\n        this.eventTypes = {\n            LOAD: 'load',\n            CLOSE: 'close',\n            HIDE_POPUP: 'hide popup',\n            REGISTRATION_REQUEST: 'registration request',\n            AUTHENTICATED: 'authenticated'\n        };\n\n        // need for export purposes\n        this.ROUTES = ROUTES;\n\n        this.dispatcher = document.createElement('div');\n        this.onHideEvent = this.onHideEvent.bind(this);\n    }\n\n    init(options) {\n        this.config = Object.assign({}, DEFAULT_CONFIG, options);\n        this.config.popupBackgroundColor = DEFAULT_CONFIG.popupBackgroundColor;\n        this.api = new XLApi(options.projectId, this.config.apiUrl);\n\n        const eventMethod = window.addEventListener ? 'addEventListener' : 'attachEvent';\n        const eventer = window[eventMethod];\n        const messageEvent = eventMethod === 'attachEvent' ? 'onmessage' : 'message';\n\n        // Listen to message from child window\n        eventer(messageEvent, (e) => {\n            let event;\n            if (typeof e.data === 'string') {\n                // Old format - string only\n                event = new CustomEvent(this.eventTypes[e.data]);\n            } else {\n                // New format - {type: 'event', ...}\n                event = new CustomEvent(this.eventTypes[e.data.type], {detail: e.data});\n            }\n            this.dispatcher.dispatchEvent(event);\n        }, false);\n\n        Object.keys(this.eventTypes).map((eventKey) => {\n            this.on(this.eventTypes[eventKey]);\n        });\n\n        if(options.popupBackgroundColor) {\n            this.config.popupBackgroundColor = options.popupBackgroundColor;\n        }\n\n        this.dispatcher.addEventListener(this.eventTypes.HIDE_POPUP, this.onHideEvent);\n\n        if (!this.config.onlyWidgets) {\n\n            let params = {};\n            params.projectId = options.projectId;\n            if (this.config.redirectUrl) {\n                params.redirect_url = this.config.redirectUrl;\n            }\n            if (this.config.loginUrl) {\n                params.login_url = this.config.loginUrl;\n            }\n            if (this.config.callbackUrl) {\n                params.login_url = this.config.callbackUrl;\n            }\n        }\n    }\n\n    /**\n     * Performs login\n     * @param prop\n     * @param error - call in case error\n     * @param success\n     */\n    login(prop, error, success) {\n\n        if (!prop || !this.socialUrls) {\n            return;\n        }\n\n        /**\n         * props\n         * authType: sn-<social name>, login-pass, sms\n         */\n        if (prop.authType) {\n            if (prop.authType.startsWith('sn-')) {\n                const socialUrl = this.socialUrls[prop.authType];\n                if (socialUrl != undefined) {\n                    window.location.href = this.socialUrls[prop.authType];\n                } else {\n                    console.error('Auth type: ' + prop.authType + ' doesn\\'t exist');\n                }\n\n            } else if (prop.authType == 'login-pass') {\n                this.api.loginPassAuth(prop.login, prop.pass, prop.rememberMe, this.config.redirectUrl, (res) => {\n                    if (res.login_url) {\n                        const finishAuth = function () {\n                            window.location.href = res.login_url;\n                        };\n                        if (success) {\n                            success({status: 'success', finish: finishAuth, redirectUrl: res.login_url});\n                        } else {\n                            finishAuth();\n                        }\n                    } else {\n                        error(this.createErrorObject('Login or pass not valid', INCORRECT_LOGIN_OR_PASSWORD_ERROR_CODE));\n                    }\n                }, function (err) {\n                    error(err);\n                });\n            } else if (prop.authType == 'sms') {\n                if (smsAuthStep == 'phone') {\n                    this.api.smsAuth(prop.phoneNumber, null, null);\n                } else if (smsAuthStep == 'code') {\n\n                }\n            } else {\n                console.error('Unknown auth type');\n            }\n        }\n    }\n\n    createErrorObject(message, code) {\n        return {\n            error: {\n                message: message,\n                code: code || -1\n            }\n        };\n    };\n\n    getProjectId() {\n        return this.config.projectId;\n    };\n\n    getRedirectURL() {\n        return this.config.redirectUrl;\n    };\n\n    getTheme() {\n        return this.config.theme;\n    }\n\n    getCallbackUrl() {\n        if (this.config.callbackUrl) {\n            return this.config.callbackUrl;\n        } else if (this.config.loginUrl) {\n            return this.config.loginUrl;\n        } else if (this.config.externalWindow) {\n            return DEFAULT_CONFIG.defaultLoginUrl;\n        }\n    };\n\n    getIframeSrc(options = {}) {\n        const widgetBaseUrl = options.widgetBaseUrl || this.config.widgetBaseUrl;\n\n        const route = options.route || this.config.route;\n\n        let src = widgetBaseUrl + route + '?widget_sdk_version=' + version + '&projectId=' + this.getProjectId();\n\n        if (this.config.locale) {\n            src = src + '&locale=' + this.config.locale;\n        }\n        if (this.config.fields) {\n            src = src + '&fields=' + this.config.fields;\n        }\n        const redirectUrl = this.getRedirectURL();\n        if (redirectUrl) {\n            src = src + '&redirectUrl=' + encodeURIComponent(redirectUrl);\n        }\n\n        const callbackUrl = this.getCallbackUrl();\n\n        if (callbackUrl) {\n            src = src + '&login_url=' + encodeURIComponent(callbackUrl);\n        }\n\n        const theme = this.getTheme();\n        if (theme) {\n            src = src + '&theme=' + encodeURIComponent(theme);\n        }\n\n        const {externalWindow} = this.config;\n        if (externalWindow) {\n            src = src + '&external_window=' + encodeURIComponent(externalWindow);\n        }\n\n        const widgetVersion = this.config.widgetVersion;\n        if (widgetVersion) {\n            src += '&version=' + encodeURIComponent(widgetVersion);\n        }\n\n        return src;\n    }\n\n    AuthWidget(elementId, options) {\n        if (this.api) {\n            if (!elementId) {\n                console.error('No div name!');\n            } else {\n                if (options == undefined) {\n                    options = {};\n                }\n                const width = `${options.width || 400}px`;\n                const height = `${options.height || 550}px`;\n\n                widgetIframe.onload = () => {\n                    element.removeChild(preloader);\n                    widgetIframe.style.width = '100%';\n                    widgetIframe.style.height = '100%';\n                    let event = new CustomEvent('load');\n                    this.dispatcher.dispatchEvent(event);\n                };\n                widgetIframe.style.width = 0;\n                widgetIframe.style.height = 0;\n                widgetIframe.frameBorder = '0';\n                widgetIframe.src = this.getIframeSrc(options);\n                widgetIframe.id = IFRAME_ID;\n\n                const preloader = document.createElement('div');\n\n                preloader.innerHTML = this.config.preloader;\n\n                const element = document.getElementById(elementId);\n                if (element) {\n                    element.style.width = width;\n                    element.style.height = height;\n                    element.appendChild(preloader);\n                    element.appendChild(widgetIframe);\n                } else {\n                    console.error('Element \\\"' + elementId + '\\\" not found!');\n                }\n\n            }\n        } else {\n            console.error('Please run XL.init() first');\n        }\n    };\n\n    onCloseEvent() {\n        widgetIframe.parentNode.removeChild(widgetIframe);\n    }\n\n    _hide() {\n        widgetIframe.style.position = '';\n        widgetIframe.style.zIndex = '';\n        widgetIframe.style.left = '';\n        widgetIframe.style.top = '';\n        widgetIframe.style.width = 0;\n        widgetIframe.style.height = 0;\n        widgetIframe.style.backgroundColor = '';\n    }\n\n    onHideEvent() {\n        if (this.config.inFullscreenMode) {\n            this._hide();\n        }\n    }\n\n    /**\n     * link event with handler\n     * @param event\n     * @param handler\n     */\n\n    on(event, handler) {\n        handler = handler || function() {};\n\n        if (event === this.eventTypes.CLOSE) {\n            if (!handler) {\n                handler = this.onCloseEvent;\n            }\n            else {\n                this.dispatcher.removeEventListener(event, this.onCloseEvent);\n            }\n        }\n\n        this.dispatcher.addEventListener(event, (e) => handler(e.detail));\n    };\n\n    _show() {\n        widgetIframe.style.position = 'fixed';\n        widgetIframe.style.zIndex = this.config.iframeZIndex;\n        widgetIframe.style.left = '0';\n        widgetIframe.style.top = '0';\n        widgetIframe.style.width = '100%';\n        widgetIframe.style.height = '100%';\n        widgetIframe.style.backgroundColor = this.config.popupBackgroundColor;\n        this.config.inFullscreenMode = true;\n    }\n\n    /**\n     * open fullsreen popup for widget\n     */\n\n    show() {\n        if (!document.getElementById(IFRAME_ID)) {\n            widgetIframe.src = this.getIframeSrc();\n            widgetIframe.id = IFRAME_ID;\n            widgetIframe.style.width = 0;\n            widgetIframe.style.height = 0;\n            widgetIframe.frameBorder = '0';\n\n            widgetIframe.onload = () => {\n                let event = new CustomEvent('load');\n                this.dispatcher.dispatchEvent(event);\n            };\n            this._show();\n\n            document.body.appendChild(widgetIframe);\n        } else {\n            this._show();\n        }\n    };\n}\n\nconst result = new XL();\n\nmodule.exports = result;"],"sourceRoot":"."}