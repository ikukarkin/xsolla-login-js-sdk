{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/supports.js","src/xlapi.js","src/main.js"],"names":["f","exports","module","define","amd","window","global","self","this","XL","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","String","prototype","startsWith","searchString","position","indexOf","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","Event","XLApi","projectId","baseUrl","makeApiCall","success","error","XMLHttpRequest","withCredentials","open","method","endpoint","onreadystatechange","readyState","status","JSON","parse","responseText","message","setRequestHeader","send","postBody","getArguments","getSocialsURLs","str","key","encodeURIComponent","loginPassAuth","login","pass","rememberMe","redirectUrl","body","username","password","remember_me","stringify","smsAuth","phoneNumber","_xlapi","DEFAULT_CONFIG","errorHandler","loginPassValidator","b","isMarkupSocialsHandlersEnabled","apiUrl","maxXLClickDepth","onlyWidgets","popUpBckgrColor","theme","preloader","result","_classCallCheck","socialUrls","eventTypes","LOAD","CLOSE","HIDE_POPUP","ROUTES","LOGIN","REGISTRATION","RECOVER_PASSWORD","ALL_SOCIALS","dispatcher","createElement","options","_this","config","_extends","api","_xlapi2","default","Object","keys","map","eventKey","on","test","addEventListener","onHideEvent","redirect_url","loginUrl","login_url","callbackUrl","updateSocialLinks","response","hasOwnProperty","console","setInterval","maxClickDepth","target","el","attributes","parentElement","findAncestor","xlData","nodeValue","authType","prop","_this2","location","href","res","finishAuth","finish","createErrorObject","err","smsAuthStep","elementId","_this3","width","height","src","widgetBaseUrl","route","getProjectId","locale","fields","getRedirectURL","getLoginUrl","getCallbackUrl","getTheme","widgetIframe","onload","_element","removeChild","_preloader","style","dispatchEvent","frameBorder","id","eventMethod","eventer","data","innerHTML","getElementById","appendChild","element","parentNode","zIndex","left","top","backgroundColor","handler","removeEventListener","onCloseEvent"],"mappings":"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","file":"xl.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\n * Created by a.korotaev on 07.11.16.\n */\nif (!String.prototype.startsWith) {\n    String.prototype.startsWith = function(searchString, position) {\n        position = position || 0;\n        return this.indexOf(searchString, position) === position;\n    };\n}\n\nif ( typeof window.CustomEvent !== \"function\" ) {\n    function CustomEvent(event, params) {\n        params = params || {bubbles: false, cancelable: false, detail: undefined};\n        var evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n        return evt;\n    }\n\n    CustomEvent.prototype = window.Event.prototype;\n\n    window.CustomEvent = CustomEvent;\n}","/**\n * Created by a.korotaev on 24.06.16.\n */\n/**\n * Impelements Xsolla Login Api\n * @param projectId - project's unique identifier\n * @param baseUrl - api endpoint\n * @constructor\n */\n\nvar XLApi = function (projectId, baseUrl) {\n    var self = this;\n    this.baseUrl = baseUrl || '//login.xsolla.com/api/';\n\n    this.projectId = projectId;\n\n    this.makeApiCall = function (params, success, error) {\n        var r = new XMLHttpRequest();\n        r.withCredentials = true;\n        r.open(params.method, self.baseUrl + params.endpoint, true);\n        r.onreadystatechange = function () {\n            if (r.readyState == 4) {\n                if (r.status == 200) {\n                    success(JSON.parse(r.responseText));\n                } else {\n                    if (r.responseText) {\n                        error(JSON.parse(r.responseText));\n                    } else {\n                        error({error: {message: 'Networking error', code: r.status}});\n                    }\n                }\n            }\n        };\n        if (params.method == 'POST') {\n            r.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n            r.send(params.postBody);\n        } else if (params.method == 'GET') {\n            r.send(params.getArguments);\n        }\n    };\n};\n/**\n * Get all avialable social methods auth url\n * @param success - success callback\n * @param error - error callback\n * @param getArguments - additional params to send with request\n */\nXLApi.prototype.getSocialsURLs = function (success, error, getArguments) {\n    var str = \"\";\n    for (var key in getArguments) {\n        if (str != \"\") {\n            str += \"&\";\n        }\n        str += key + \"=\" + encodeURIComponent(getArguments[key]);\n    }\n\n    return this.makeApiCall({method: 'GET', endpoint: 'social/login_urls?' + str, getArguments: null}, success, error);\n};\n\nXLApi.prototype.loginPassAuth = function (login, pass, rememberMe, redirectUrl, success, error) {\n    var body = {\n        username: login,\n        password: pass,\n        remember_me: rememberMe\n    };\n    return this.makeApiCall({method: 'POST', endpoint: 'proxy/login?projectId='+this.projectId + '&redirect_url=' + encodeURIComponent(redirectUrl), postBody: JSON.stringify(body)}, success, error);\n};\n\nXLApi.prototype.smsAuth = function (phoneNumber, success, error) {\n    return this.makeApiCall({method: 'GET', endpoint: 'sms', getArguments: 'phoneNumber=' + phoneNumber}, success, error);\n};\n\nmodule.exports = XLApi;\n","/**\n * Created by a.korotaev on 24.06.16.\n */\nrequire('./supports');\n\nimport XLApi from './xlapi';\n/**\n * Create an `Auth0` instance with `options`\n *\n * @class XL\n * @constructor\n */\n\nconst DEFAULT_CONFIG = {\n    errorHandler: function (a) {\n    },\n    loginPassValidator: function (a, b) {\n        return true;\n    },\n    isMarkupSocialsHandlersEnabled: false,\n    apiUrl: '//login.xsolla.com/api/',\n    maxXLClickDepth: 20,\n    onlyWidgets: false,\n    popUpBckgrColor: '#bbbbbb',\n    theme: 'app.default.css',\n    preloader: '<div></div>'\n};\n\nconst INVALID_LOGIN_ERROR_CODE = 1;\nconst INCORRECT_LOGIN_OR_PASSWORD_ERROR_CODE = 2;\n\nclass XL {\n    constructor() {\n        this.socialUrls = {};\n        this.eventTypes = {\n            LOAD: 'load',\n            CLOSE: 'close',\n            HIDE_POPUP: 'hide popup'\n        };\n\n        this.ROUTES = {\n            LOGIN: '',\n            REGISTRATION: 'registration',\n            RECOVER_PASSWORD: 'reset-password',\n            ALL_SOCIALS: 'other'\n        };\n\n        this.dispatcher = document.createElement('div');\n    }\n\n    init(options) {\n        this.config = Object.assign({}, DEFAULT_CONFIG, options);\n        this.config.popUpBckgrColor = DEFAULT_CONFIG.popUpBckgrColor;\n        this.api = new XLApi(options.projectId, this.config.apiUrl);\n\n        Object.keys(this.eventTypes).map((eventKey) => {\n            this.on(this.eventTypes[eventKey]);\n        });\n\n        if(options.popUpBckgrColor) {\n            let isOk  = /^#[0-9A-F]{6}$/i.test(options.popUpBckgrColor);\n            if (isOk) this.config.popUpBckgrColor = options.popUpBckgrColor;\n        }\n\n        this.dispatcher.addEventListener(this.eventTypes.HIDE_POPUP, this.onHideEvent);\n\n        if (!this.config.onlyWidgets) {\n\n            let params = {};\n            params.projectId = options.projectId;\n            if (this.config.redirectUrl) {\n                params.redirect_url = this.config.redirectUrl;\n            }\n            if (this.config.loginUrl) {\n                params.login_url = this.config.loginUrl;\n            }\n            if (this.config.callbackUrl) {\n                params.login_url = this.config.callbackUrl;\n            }\n\n            const updateSocialLinks = () => {\n                this.api.getSocialsURLs((response) => {\n                    this.socialUrls = {};\n                    for (let key in response) {\n                        if (response.hasOwnProperty(key)) {\n                            this.socialUrls['sn-' + key] = response[key];\n                        }\n                    }\n                }, (e) => {\n                    console.error(e);\n                }, params);\n            };\n\n            updateSocialLinks();\n            setInterval(updateSocialLinks, 1000 * 60 * 59);\n\n            const maxClickDepth = this.config.maxXLClickDepth;\n            // Find closest ancestor with data-xl-auth attribute\n            function findAncestor(el) {\n                if (el.attributes['data-xl-auth']) {\n                    return el;\n                }\n                let i = 0;\n                while ((el = el.parentElement) && !el.attributes['data-xl-auth'] && ++i < maxClickDepth);\n                return el;\n            }\n\n            if (this.config.isMarkupSocialsHandlersEnabled) {\n                document.addEventListener('click', (e) => {\n                    const target = findAncestor(e.target);\n                    // Do nothing if click was outside of elements with data-xl-auth\n                    if (!target) {\n                        return;\n                    }\n                    const xlData = target.attributes['data-xl-auth'];\n                    if (xlData) {\n                        let nodeValue = xlData.nodeValue;\n                        if (nodeValue) {\n                            this.login({authType: nodeValue});\n                        }\n                    }\n                });\n            }\n        }\n    }\n\n    /**\n     * Performs login\n     * @param prop\n     * @param error - call in case error\n     * @param success\n     */\n    login(prop, error, success) {\n\n        if (!prop || !this.socialUrls) {\n            return;\n        }\n\n        /**\n         * props\n         * authType: sn-<social name>, login-pass, sms\n         */\n        if (prop.authType) {\n            if (prop.authType.startsWith('sn-')) {\n                const socialUrl = this.socialUrls[prop.authType];\n                if (socialUrl != undefined) {\n                    window.location.href = this.socialUrls[prop.authType];\n                } else {\n                    console.error('Auth type: ' + prop.authType + ' doesn\\'t exist');\n                }\n\n            } else if (prop.authType == 'login-pass') {\n                this.api.loginPassAuth(prop.login, prop.pass, prop.rememberMe, this.config.redirectUrl, (res) => {\n                    if (res.login_url) {\n                        const finishAuth = function () {\n                            window.location.href = res.login_url;\n                        };\n                        if (success) {\n                            success({status: 'success', finish: finishAuth, redirectUrl: res.login_url});\n                        } else {\n                            finishAuth();\n                        }\n                    } else {\n                        error(this.createErrorObject('Login or pass not valid', INCORRECT_LOGIN_OR_PASSWORD_ERROR_CODE));\n                    }\n                }, function (err) {\n                    error(err);\n                });\n            } else if (prop.authType == 'sms') {\n                if (smsAuthStep == 'phone') {\n                    this.api.smsAuth(prop.phoneNumber, null, null);\n                } else if (smsAuthStep == 'code') {\n\n                }\n            } else {\n                console.error('Unknown auth type');\n            }\n        }\n    }\n\n    createErrorObject(message, code) {\n        return {\n            error: {\n                message: message,\n                code: code || -1\n            }\n        };\n    };\n\n    getProjectId() {\n        return this.config.projectId;\n    };\n\n    getRedirectURL() {\n        return this.config.redirectUrl;\n    };\n\n    getTheme() {\n        return this.config.theme;\n    }\n\n    getLoginUrl() {\n        return this.config.loginUrl;\n    };\n\n    getCallbackUrl() {\n        return this.config.callbackUrl;\n    };\n\n    AuthWidget(elementId, options) {\n        if (this.api) {\n            if (!elementId) {\n                console.error('No div name!');\n            } else {\n                if (options == undefined) {\n                    options = {};\n                }\n                const width = `${options.width || 400}px`;\n                const height = `${options.height || 550}px`;\n\n                const widgetBaseUrl = options.widgetBaseUrl || 'https://xl-widget.xsolla.com/';\n\n                const route = options.route || this.ROUTES.LOGIN;\n\n                let src = widgetBaseUrl + route + '?projectId=' + this.getProjectId();\n\n                if (this.config.locale) {\n                    src = src + '&locale=' + this.config.locale;\n                }\n                if (this.config.fields) {\n                    src = src + '&fields=' + this.config.fields;\n                }\n                const redirectUrl = this.getRedirectURL();\n                if (redirectUrl) {\n                    src = src + '&redirectUrl=' + encodeURIComponent(redirectUrl);\n                }\n\n                const loginUrl = this.getLoginUrl();\n                const callbackUrl = this.getCallbackUrl();\n\n                if (loginUrl) {\n                     src = src + '&login_url=' + encodeURIComponent(loginUrl);\n                } else {\n                    if (callbackUrl) {\n                        src = src + '&login_url=' + encodeURIComponent(callbackUrl);\n                    }\n                }\n\n                const theme = this.getTheme();\n                if (theme) {\n                    src = src + '&theme=' + encodeURIComponent(theme);\n                }\n\n                const widgetIframe = document.createElement('iframe');\n                widgetIframe.onload = () => {\n                    element.removeChild(preloader);\n                    widgetIframe.style.width = '100%';\n                    widgetIframe.style.height = '100%';\n                    let event = new CustomEvent('load');\n                    this.dispatcher.dispatchEvent(event);\n                };\n                widgetIframe.style.width = 0;\n                widgetIframe.style.height = 0;\n                widgetIframe.frameBorder = '0';\n                widgetIframe.src = src;\n                widgetIframe.id = 'XsollaLoginWidgetIframe';\n\n                const eventMethod = window.addEventListener ? 'addEventListener' : 'attachEvent';\n                const eventer = window[eventMethod];\n                const messageEvent = eventMethod == 'attachEvent' ? 'onmessage' : 'message';\n\n                // Listen to message from child window\n                eventer(messageEvent, (e) => {\n                    let event = new CustomEvent(this.eventTypes[e.data]);\n                    this.dispatcher.dispatchEvent(event);\n                }, false);\n\n                const preloader = document.createElement('div');\n\n                preloader.innerHTML = this.config.preloader;\n\n                const element = document.getElementById(elementId);\n                if (element) {\n                    element.style.width = width;\n                    element.style.height = height;\n                    element.appendChild(preloader);\n                    element.appendChild(widgetIframe);\n                } else {\n                    console.error('Element \\\"' + elementId + '\\\" not found!');\n                }\n\n            }\n        } else {\n            console.error('Please run XL.init() first');\n        }\n    };\n\n    onCloseEvent() {\n        var element = document.getElementById('XsollaLoginWidgetIframe');\n        element.parentNode.removeChild(element);\n    }\n\n    onHideEvent() {\n        const  widgetIframe = document.getElementById('XsollaLoginWidgetIframe');\n\n        widgetIframe.style.position = '';\n        widgetIframe.style.zIndex = '';\n        widgetIframe.style.left = '';\n        widgetIframe.style.top = '';\n        widgetIframe.style.backgroundColor = '';\n    }\n\n    /**\n     * link event with handler\n     * @param event\n     * @param handler\n     */\n\n    on(event, handler) {\n        handler = handler || null;\n\n        if (event === this.eventTypes.CLOSE) {\n            if (!handler) {\n                handler = this.onCloseEvent;\n            }\n            else {\n                this.dispatcher.removeEventListener(event, this.onCloseEvent);\n            }\n        }\n\n        this.dispatcher.addEventListener(event, handler);\n    };\n\n    /**\n     * open fullsreen popup for widget\n     */\n\n    show() {\n        const  widgetIframe = document.getElementById('XsollaLoginWidgetIframe');\n\n        if (widgetIframe !== undefined) {\n            widgetIframe.style.position = 'fixed';\n            widgetIframe.style.zIndex = '1';\n            widgetIframe.style.left = '0';\n            widgetIframe.style.top = '0';\n            widgetIframe.style.width = '100%';\n            widgetIframe.style.height = '100%';\n            widgetIframe.style.backgroundColor = this.config.popUpBckgrColor;\n        }\n    };\n}\n\nconst result = new XL();\n\nmodule.exports = result;"],"sourceRoot":"."}